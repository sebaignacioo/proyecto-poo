/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package aplicacion.controllers.gui;

import aplicacion.data.AlumnoData;
import aplicacion.data.ApoderadoData;
import aplicacion.data.ProfesorData;
import aplicacion.models.Persona;

import javax.swing.table.AbstractTableModel;

/**
 * Clase que controla la interacción con la búsqueda de una persona en la ejecución de la interfaz gráfica.
 *
 * @author Sebastián García, Guillermo González, Benjamín Navarrete
 * @version 3.0
 */
public class BuscarControllerGUI extends javax.swing.JPanel {

    private final AlumnoData alumnoData;
    private final ApoderadoData apoderadoData;
    private final ProfesorData profesorData;

    /**
     * Creates new form Buscar
     */
    public BuscarControllerGUI(AlumnoData alumnoData, ApoderadoData apoderadoData, ProfesorData profesorData) {
        this.alumnoData = alumnoData;
        this.apoderadoData = apoderadoData;
        this.profesorData = profesorData;
        initComponents();
    }

    /**
     * Permite buscar a la persona en los registros.
     *
     * @param rut RUT de la persona a buscar.
     * @return Matriz de Object con los datos a mostrar en la JTable.
     */
    private Object[][] buscarPersona(String rut) {
        Persona persona = null;
        String tipo = "";
        if (alumnoData.getAlumno(rut) != null) {
            tipo = "Alumno";
            persona = alumnoData.getAlumno(rut);
        } else if (apoderadoData.getApoderado(rut) != null) {
            tipo = "Apoderado";
            persona = apoderadoData.getApoderado(rut);
        } else if (profesorData.getProfesor(rut) != null) {
            tipo = "Profesor";
            persona = profesorData.getProfesor(rut);
        }
        if (persona != null)
            return new Object[][]{{
                persona.getRut(),
                persona.getNombres(),
                persona.getApMaterno(),
                persona.getApMaterno(),
                tipo
            }};
        return null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Ingrese rut de persona");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "rut", "Nombres", "Apellido Paterno", "Apellido materno", "Tipo"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jToggleButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jToggleButton1.setText("Buscar");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    /**
     * Permite buscar una persona en los datos y mostrarlos a través de la interfaz gráfica.
     *
     * @param evt Evento.
     */
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        String[] columns = new String[] {
                "rut", "Nombres", "Apellido Paterno", "Apellido materno", "Tipo"
        };
        Object[][] data = buscarPersona(jTextField1.getText());
        if (data == null) {
            MessageUtilsGUI.errorMsg("La persona buscada no fue encontrada en nuestros registros.");
            return;
        }
        jTable1.setModel(new AbstractTableModel() {
            @Override
            public String getColumnName(int col) {
                return columns[col];
            }

            @Override
            public int getRowCount() {
                return data.length;
            }

            @Override
            public int getColumnCount() {
                return columns.length;
            }

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                return data[rowIndex][columnIndex];
            }
        });
    }//GEN-LAST:event_jToggleButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
